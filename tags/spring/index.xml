<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Spring | Abing's Blog</title><link>https://blog.abingcbc.cn/tags/spring/</link><atom:link href="https://blog.abingcbc.cn/tags/spring/index.xml" rel="self" type="application/rss+xml"/><description>Spring</description><generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>zh-cn</language><lastBuildDate>Sun, 07 Mar 2021 23:59:22 +0000</lastBuildDate><item><title>Spring Cloud IPv6端口问题排坑</title><link>https://blog.abingcbc.cn/posts/spring-ipv6/</link><pubDate>Sun, 07 Mar 2021 23:59:22 +0000</pubDate><guid>https://blog.abingcbc.cn/posts/spring-ipv6/</guid><description>&lt;h2 id="场景" class="relative group">场景 &lt;span class="absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100">&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#%e5%9c%ba%e6%99%af" aria-label="锚点">#&lt;/a>&lt;/span>&lt;/h2>
&lt;p>使用 Spring Cloud Eureka 搭建服务注册中心，使用 Zuul 搭建服务网关，一套比较传统的微服务架构。
服务注册中心的地址为 http://localhost:8888，Zuul 网关地址为 http://localhost:8080， 另外搭建一个服务名为 metadata-service 的服务，地址为 http://localhost:8088。&lt;/p>
&lt;h2 id="问题" class="relative group">问题 &lt;span class="absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100">&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#%e9%97%ae%e9%a2%98" aria-label="锚点">#&lt;/a>&lt;/span>&lt;/h2>
&lt;p>在 metadata-service 中提供一个测试的接口&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@RestController&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">MetadataController&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="err">​&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@GetMapping&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;/test&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getTest&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用 Postman 进行测试，结果发现直接请求 http://localhost:8088/test 即 metadata-service 的地址，可以正常得到结果&lt;/p>
&lt;p>
&lt;figure>
&lt;img class="mx-auto my-0 rounded-md" src="./1.jpg" alt="" />
&lt;/figure>
&lt;/p>
&lt;p>而通过网关，使用 Zuul 默认路由规则，调用服务，会出现 404 的错误&lt;/p>
&lt;p>
&lt;figure>
&lt;img class="mx-auto my-0 rounded-md" src="./2.jpg" alt="" />
&lt;/figure>
&lt;/p>
&lt;h2 id="分析" class="relative group">分析 &lt;span class="absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100">&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#%e5%88%86%e6%9e%90" aria-label="锚点">#&lt;/a>&lt;/span>&lt;/h2>
&lt;p>首先，我们可以先通过 http://localhost:8888 查看服务是否注册到了服务注册中心&lt;/p>
&lt;p>
&lt;figure>
&lt;img class="mx-auto my-0 rounded-md" src="./3.jpg" alt="" />
&lt;/figure>
&lt;/p>
&lt;p>可以看到没有任何问题。
那么，我们再检查网关有没有获取到 metadata-service 的路由。可以通过 http://localhost:8080/actuator/routes 查看（actuator默认是关闭的，可以通过配置 management.endpoints.web.exposure.include=* 开启）。&lt;/p>
&lt;p>
&lt;figure>
&lt;img class="mx-auto my-0 rounded-md" src="./4.jpg" alt="" />
&lt;/figure>
&lt;/p>
&lt;p>同样，我们可以看到没有任何问题。
那么，就很奇怪了🤨，服务本身没有任何问题，直接调用也可以访问，而通过网关一转发，为什么就 404 了呢？在网上查了一下午，也没有找到有人遇到过类似的问题。。。😱
问题的关键在我关闭服务后再次请求 http://localhost:8088/test 时终于找到了。正常情况下，关闭了服务后，应该没有返回的 response，但发出请求过后仍然是 404&lt;/p>
&lt;p>
&lt;figure>
&lt;img class="mx-auto my-0 rounded-md" src="./5.jpg" alt="" />
&lt;/figure>
&lt;/p>
&lt;p>那么，就很明显了，有另一个进程也在监听 8088 端口 ！！！
但还是很奇怪，那为什么服务启动的时候没有报端口被占用的错误呢？？？
重新启动服务，使用 lsof -i tcp:8088 （Mac OS）查看端口占用情况&lt;/p>
&lt;p>
&lt;figure>
&lt;img class="mx-auto my-0 rounded-md" src="./6.jpg" alt="" />
&lt;/figure>
&lt;/p>
&lt;p>果然有两个进程同时在监听，而一个是 IPv4，一个是 IPv6的。
首先，根据这篇文章 &lt;a
href="https://blog.csdn.net/jiyiqinlovexx/article/details/50959351"
target="_blank" rel="noreferrer noopener"
>https://blog.csdn.net/jiyiqinlovexx/article/details/50959351&lt;/a> 的解释，多个进程是完全可以同时监听同一个端口的。
而从 Java 7 开始，默认使用 IPv6 而不是 IPv4 （https://stackoverflow.com/questions/35470838/localhost-vs-127-0-0-1-in-spring-framework），所以对于 Spring 的 localhost 来说，其实真正使用的 IP 地址是 ::1，而不是 127.0.0.1 。使用 Postman 进行测试，可以发现 http://[::1]:8088/test 得到正常结果，而 http://127.0.0.1:8088/test 则为 404 。这就完美地解释了开启服务与停止服务，返回结果不同的问题，Spring 服务所对应的正是那个 IPv6 的进程。
那么，为什么网关转发就到了 IPv4 呢？我们再来看一下服务注册中心里的信息&lt;/p>
&lt;p>
&lt;figure>
&lt;img class="mx-auto my-0 rounded-md" src="./7.jpg" alt="" />
&lt;/figure>
&lt;/p>
&lt;p>可以看到其实 Eureka 保存的是每个服务的 IP 地址是本机的 IPv4 的内网地址，而不是保存域名，这就是问题的关键。我们可以使用 Postman 发送请求 http://localhost:8080/metadata-service/test 后，使用命令 lsof -i tcp:8088 进行验证。&lt;/p>
&lt;p>
&lt;figure>
&lt;img class="mx-auto my-0 rounded-md" src="./8.jpg" alt="" />
&lt;/figure>
&lt;/p>
&lt;p>可以看到的确是向内网 IP 地址，而不是向 localhost 转发请求。&lt;/p>
&lt;h2 id="解决方案" class="relative group">解决方案 &lt;span class="absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100">&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88" aria-label="锚点">#&lt;/a>&lt;/span>&lt;/h2>
&lt;p>至此，问题的原因已经完全清楚了，果然程序都是 debug de 出来的。
最简单的方法也很清楚了，换个端口号就 OK 了。&lt;/p>
&lt;p>如果本文有错误或者理解不对的地方，欢迎指正！！！😆&lt;/p>
&lt;p>那么，占了 8088 端口的 IPv4 进程是哪个程序呢？🤨&lt;/p>
&lt;p>。。。。Hadoop 出来挨打！！！😭😭😭&lt;/p></description></item></channel></rss>